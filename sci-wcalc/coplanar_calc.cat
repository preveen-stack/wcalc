coplanar_calc()                 Wcalc Commands                 coplanar_calc()

ccooppllaannaarr__ccaallcc - Symmetric coplanar transmission line analysis

SSYYNNOOPPSSIISS
       [z0,  keff,  elen,  loss,  L,  R, C, G, lc, ld, deltal, depth] = copla-
       nar_calc(w, s, h, l, tmet, rho, rough, er, tand, with_ground, f)

IINNPPUUTT PPAARRAAMMEETTEERRSS
       w         : width of coplanar line (meters)

       s         : space between line the the coplanar ground (meters)

       h         : substrate thickness (meters)

       l         : lentgh of coplanar line (meters)

       tmet      : metal thickness (meters)

       rho       : resistivity of the line (relative to copper)

       rough     : conductor surface roughness (meters-rms)

       er        : substrate relative permitivitty

       tand      : substrate loss tangent

       with_ground
                 : 0 for no bottom side ground, 1 for bottom side ground plane

       f         : analysis frequency (Hz)

OOUUTTPPUUTT VVAALLUUEESS
       z0        : calculated characteristic impedance (Ohms)

       keff      : calculated effective relative permitivity

       elen      : calculated electrical length of the line (degrees)

       loss      : calculated loss of the line (dB)

       L         : calculated inductance per length (Henries/meter)

       R         : calculated resistance per length (Ohms/meter)

       C         : calculated capacitance per length (Farads/meter)

       G         : calculated conductance per length (Siemens/meter)

       lc        : conductor loss (dB/meter)

       ld        : dielectric loss (dB/meter)

       deltal    : calculated open circuit end correction (meters)

       depth     : calculated skin depth (meters)

DDEESSCCRRIIPPTTIIOONN
       Function to analyze the electrical characteristics of a single coplanar
       transmission line. The physical dimensions of  the  coplanar  line  are
       given  as inputs and the characteristic impedance, effective dielectric
       constant, loss and open circuit end correction are calculated.

       The model accounts  for  dispersion  (frequency  dependent  propagation
       velocity).

                  |<--S-->|<--W-->|<--S-->|
            ______         _______         ______
           )      |       | metal |       |      ( <- rho,rough
           ----------------------------------------------
          (  dielectric                         /|     (
           )   er,tand                       H   |       )
          (                                     /     (
           ----------------------------------------------
           XXXXXXXXXXXXXXXXXX ground XXXXXXXXXXXXXXXXXXXX

EEXXAAMMPPLLEE
        // mils to meters conversion factor
              sf=25.4e-6;

        // width
              w=20*sf;

        // space
              s=20*sf;

        // height
              h=15*sf;

        // length
              l=1100*sf;

        // metal thickness
              tmet=1.4*sf;

        // resitivity
              rho=1.72e-8;

        // metal surface roughness
              rough=0.05*sf;

        // relative dielectric constant
              er=4.5;

        // loss tangent
              tand=0.01;

        // frequency
              f=2.4e9;
              [z0,keff,elen,loss,L,R,C,G,lc,ld,deltal,depth] = ...
                coplanar_calc(w,s,h,l,tmet,rho,rough,er,tand,0,f);
              disp(sprintf('z0   = %8.4g Ohms', z0));
              disp(sprintf('keff = %8.4g ', keff));
              disp(sprintf('elen = %8.4g degrees', elen));
              disp(sprintf('loss = %8.4g dB', loss));
              disp(sprintf('L    = %8.4g H/m', L));
              disp(sprintf('R    = %8.4g Ohms/m', R));
              disp(sprintf('C    = %8.4g F/m', C));
              disp(sprintf('G    = %8.4g S/m', G));
              disp(sprintf('lc   = %8.4g dB/m', lc));
              disp(sprintf('ld   = %8.4g dB/m', ld));
              disp(sprintf('open end correction = %8.4g mil', deltal/sf));
              disp(sprintf('skin depth = %8.4g um', depth*1e6));

SSEEEE AALLSSOO
       stdio-wcalc(1),     air_coil_calc(),    air_coil_syn(),    coax_calc(),
       coax_syn(), coplanar_calc(), coplanar_syn(), coupled_microstrip_calc(),
       coupled_microstrip_syn(),         coupled_stripline_calc(),        cou-
       pled_stripline_syn(),    ic_microstrip_calc(),     ic_microstrip_syn(),
       microstrip_calc(), microstrip_syn(), stripline_calc(), stripline_syn()

AAUUTTHHOORR
       Dan McMahill

BBUUGGSS
       None known, but this module is only moderately tested

Wcalc                                                          coplanar_calc()
